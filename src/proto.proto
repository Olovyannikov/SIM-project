syntax = "proto3";
package api;


service Abonent {
    rpc listenBalance (stream Empty) returns (stream ListenBalanceResponse);
    rpc changePassword (ChangePasswordRequest) returns (ChangePasswordResponse);
}

message ListenBalanceResponse {

    message SuccessModel {
        double balance = 1;
    }

    oneof response {
        SuccessModel success = 1;
        Empty unauthorized = 2;
    }
}

message ChangePasswordRequest {
    string password = 1;
}


message ChangePasswordResponse {

    oneof result {
        Empty success = 1;
        string invalidRequest = 2;
        Empty invalidPassword = 3;
        Empty unauthorized = 4;
    }
}

service Payment {
    rpc getMinBalancePaymentAmmount (Empty) returns (GetMinBalancePaymentAmmountRespoonse);
    rpc createBalancePayment (CreateBalancePaymentRequest) returns (CreateBalancePaymentResponse);
}

message GetMinBalancePaymentAmmountRespoonse {
    double ammount = 1;
}

message CreateBalancePaymentRequest {
    double amount = 1;
}

message CreateBalancePaymentResponse {

    message SuccessModel {
        string url = 1;
    }

    oneof response {
        SuccessModel success = 1;
        string invalidRequest = 2;
        Empty unauthorized = 3;
        Empty ammountIsLessMinimal = 4;
    }    
}

service Registration {
    rpc registerWeb (RegisterWebRequest) returns (RegisterWebResponse);
    rpc verifyWebRegistration (VerifyWebRegistrationRequest) returns (VerifyWebRegistrationResponse);
}


message RegisterWebRequest {
    string email = 1;
    string password = 2;
}

message RegisterWebResponse {

    message SuccessModel {
        string token = 1;
    }

    oneof response {
        SuccessModel success = 1;
        string invalidRequest = 2;
        Empty invalidEmail = 3;
        Empty invalidPassword = 4;
        Empty emailAlreadyUsed = 5;
        int64 tooManyAttempts = 6;
        Empty expired = 7;
    }
}

message VerifyWebRegistrationRequest {
    string token = 1;
}

message VerifyWebRegistrationResponse {

    message SuccessModel {
        string token = 1;
    }

    oneof response {
        SuccessModel success = 1;
        string invalidRequest = 2;
        Empty expired = 3;
        Empty invalidToken = 4;
    }
}


service Auth {
    rpc login (LoginRequest) returns (LoginResponse);
    rpc requestPasswordRestore (RequestPasswordRestoreRequest) returns (RequestPasswordRestoreResponse);
    rpc verifyPasswordRestore (VerifyPasswordRestoreRequest) returns (VerifyPasswordRestoreResponse);
}

message LoginRequest {
    string email = 1;
    string password = 2;
}

message LoginResponse {

    message SuccessModel {
        string token = 1;
    }

    oneof response {
        SuccessModel success = 1;
        string invalidRequest = 2;
        Empty invalidEmailOrPassword = 3;
        int64 tooManyErrorAttempts = 4;
    }
}

message RequestPasswordRestoreRequest {
    string email = 1;
}

message RequestPasswordRestoreResponse {

    oneof result {
        Empty success = 1;
        string invalidRequest = 2;
        Empty invalidEmail = 3;
        Empty accountNotFound = 4;
        Empty expired = 5;
        int64 tooManyErrorAttempts = 6;
    }
}

message VerifyPasswordRestoreRequest {
    string verificationToken = 1;
}

message VerifyPasswordRestoreResponse {

    message SuccessModel {
        string token = 1;
    }

    oneof result {
        SuccessModel success = 1;
        string invalidRequest = 2;
        Empty expired = 3;
        Empty invalidToken = 4;
    }
}

message Empty {
    
}

message Int32Value {
    int32 value = 1;
}

message Int64Value {
    int64 value = 1;
}
